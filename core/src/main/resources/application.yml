#Port
server:
  port: 8888

#DB
spring:
  datasource:
    url: jdbc:postgresql://localhost:5454/postgres
    username: postgres
    password: postgres

#  data:
#    mongodb:
#      username:
#      password:
#      port:

  security:
    user:
      name: mixamus
      password: qwerty13

  jpa:
    open-in-view: true
    show-sql: true # false стоит по умолчанию, с true будет в консоли генерировать sql запросы
    properties:
      hibernate:
        enable_lazy_load_no_trans: true

  flyway:
    baseline-on-migrate: true
    check-location: true
    locations: classpath:db/migration
    schemas: public
    enabled: true

  kafka:
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      #        properties:
      #          spring:
      #            json:
      #              type:
      #                mapping: test-topic:vis.vis_sse.ui.mvc.KafkaMessage

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      properties:
#        spring:
#          json:
#            type:
#              mapping: test-topic:vis.vis_sse.ui.mvc.KafkaMessage

#Debug
debug: false

#Actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"


  endpoint:
    health:
      show-details: always
      show-components: always

  health:
    db:
      enabled: true
    diskspace:
      enabled:
info:
  app:
    encoding: "UTF-8"
    java:
      source: "11"
      target: "11"