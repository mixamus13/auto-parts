openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  "/api/order":
    post:
      tags:
        - order-controller
      operationId: createPerson
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Client"
      responses:
        '200':
          description: OK
  "/api/order/{phone}":
    get:
      tags:
        - order-controller
      operationId: getClient
      parameters:
        - name: phone
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/Client"
  "/cars":
    get:
      tags:
        - car-entity-controller
      description: get-car
      operationId: getCollectionResource-car-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: '0'
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: '20'
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default
          sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/CollectionModelCar"
            application/x-spring-data-compact+json:
              schema:
                "$ref": "#/components/schemas/CollectionModelCar"
            text/uri-list:
              schema:
                "$ref": "#/components/schemas/CollectionModelCar"
    post:
      tags:
        - car-entity-controller
      description: create-car
      operationId: postCollectionResource-car-post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Car"
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelCar"
  "/cars/{id}":
    get:
      tags:
        - car-entity-controller
      description: get-car
      operationId: getItemResource-car-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/EntityModelCar"
        '404':
          description: Not Found
    put:
      tags:
        - car-entity-controller
      description: update-car
      operationId: putItemResource-car-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Car"
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelCar"
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelCar"
        '204':
          description: No Content
    delete:
      tags:
        - car-entity-controller
      description: delete-car
      operationId: deleteItemResource-car-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
    patch:
      tags:
        - car-entity-controller
      description: patch-car
      operationId: patchItemResource-car-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Car"
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelCar"
        '204':
          description: No Content
  "/clients":
    get:
      tags:
        - client-entity-controller
      description: get-client
      operationId: getCollectionResource-client-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: '0'
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: '20'
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default
          sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/CollectionModelClient"
            application/x-spring-data-compact+json:
              schema:
                "$ref": "#/components/schemas/CollectionModelClient"
            text/uri-list:
              schema:
                "$ref": "#/components/schemas/CollectionModelClient"
    post:
      tags:
        - client-entity-controller
      description: create-client
      operationId: postCollectionResource-client-post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Client"
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelClient"
  "/clients/search/getByPhone":
    get:
      tags:
        - client-search-controller
      operationId: executeSearch-client-get
      parameters:
        - name: phone
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/EntityModelClient"
        '404':
          description: Not Found
  "/clients/{id}":
    get:
      tags:
        - client-entity-controller
      description: get-client
      operationId: getItemResource-client-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/EntityModelClient"
        '404':
          description: Not Found
    put:
      tags:
        - client-entity-controller
      description: update-client
      operationId: putItemResource-client-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Client"
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelClient"
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelClient"
        '204':
          description: No Content
    delete:
      tags:
        - client-entity-controller
      description: delete-client
      operationId: deleteItemResource-client-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
    patch:
      tags:
        - client-entity-controller
      description: patch-client
      operationId: patchItemResource-client-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Client"
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelClient"
        '204':
          description: No Content
  "/clients/{id}/car":
    get:
      tags:
        - client-property-reference-controller
      description: get-client
      operationId: followPropertyReference-client-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelClient"
            text/uri-list:
              schema:
                "$ref": "#/components/schemas/RepresentationModelClient"
        '404':
          description: Not Found
    put:
      tags:
        - client-property-reference-controller
      description: update-client
      operationId: createPropertyReference-client-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CollectionModelObject"
          application/x-spring-data-compact+json:
            schema:
              "$ref": "#/components/schemas/CollectionModelObject"
          text/uri-list:
            schema:
              "$ref": "#/components/schemas/CollectionModelObject"
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelClient"
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelClient"
        '204':
          description: No Content
    delete:
      tags:
        - client-property-reference-controller
      description: delete-client
      operationId: deletePropertyReference-client-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
    patch:
      tags:
        - client-property-reference-controller
      description: patch-client
      operationId: createPropertyReference-client-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CollectionModelObject"
          application/x-spring-data-compact+json:
            schema:
              "$ref": "#/components/schemas/CollectionModelObject"
          text/uri-list:
            schema:
              "$ref": "#/components/schemas/CollectionModelObject"
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelClient"
        '204':
          description: No Content
  "/clients/{id}/car/{propertyId}":
    get:
      tags:
        - client-property-reference-controller
      description: get-client
      operationId: followPropertyReference-client-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelClient"
        '404':
          description: Not Found
    delete:
      tags:
        - client-property-reference-controller
      description: delete-client
      operationId: deletePropertyReferenceId-client-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  "/profile":
    get:
      tags:
        - profile-controller
      operationId: listAllFormsOfMetadata_1
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                "$ref": "#/components/schemas/RepresentationModelObject"
  "/profile/cars":
    get:
      tags:
        - profile-controller
      operationId: descriptor_1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                "$ref": "#/components/schemas/JsonSchema"
  "/profile/clients":
    get:
      tags:
        - profile-controller
      operationId: descriptor_2
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                "$ref": "#/components/schemas/JsonSchema"
components:
  schemas:
    Car:
      type: object
      properties:
        vin:
          type: string
        model:
          maxLength: 60
          minLength: 0
          type: string
        year:
          maximum: 4
          type: integer
          format: int32
        crash:
          type: boolean
    Client:
      type: object
      properties:
        id:
          type: integer
          format: int64
        car:
          "$ref": "#/components/schemas/Car"
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          type: string
        phone:
          type: string
    AbstractJsonSchemaPropertyObject:
      type: object
      properties:
        title:
          type: string
        readOnly:
          type: boolean
    Item:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/AbstractJsonSchemaPropertyObject"
        requiredProperties:
          type: array
          items:
            type: string
    JsonSchema:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/AbstractJsonSchemaPropertyObject"
        requiredProperties:
          type: array
          items:
            type: string
        definitions:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/Item"
        type:
          type: string
        "$schema":
          type: string
    Links:
      type: object
      additionalProperties:
        "$ref": "#/components/schemas/Link"
    RepresentationModelObject:
      type: object
      properties:
        _links:
          "$ref": "#/components/schemas/Links"
    RepresentationModelCar:
      type: object
      properties:
        _links:
          "$ref": "#/components/schemas/Links"
    EntityModelCar:
      type: object
      properties:
        vin:
          type: string
        model:
          maxLength: 60
          minLength: 0
          type: string
        year:
          maximum: 4
          type: integer
          format: int32
        crash:
          type: boolean
        _links:
          "$ref": "#/components/schemas/Links"
    CollectionModelCar:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cars:
              type: array
              items:
                "$ref": "#/components/schemas/Car"
        _links:
          "$ref": "#/components/schemas/Links"
    RepresentationModelClient:
      type: object
      properties:
        _links:
          "$ref": "#/components/schemas/Links"
    EntityModelClient:
      type: object
      properties:
        id:
          type: integer
          format: int64
        car:
          "$ref": "#/components/schemas/Car"
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          type: string
        phone:
          type: string
        _links:
          "$ref": "#/components/schemas/Links"
    CollectionModelClient:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            clients:
              type: array
              items:
                "$ref": "#/components/schemas/Client"
        _links:
          "$ref": "#/components/schemas/Links"
    CollectionModelObject:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            objects:
              type: array
              items:
                type: object
        _links:
          "$ref": "#/components/schemas/Links"
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
